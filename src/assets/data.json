{"agent_zero":{"interaction_type":{"description":"Interaction type that bonds must have in initializing agent 0","type":"enum","values":["injection","sex","pca"],"default":"injection"},"num_partners":{"type":"int","description":"Minimum number of partners for agent 0.","default":4},"start_time":{"type":"int","description":"Time to insert the exposure conversion for agent 0","default":1},"fallback":{"type":"boolean","description":"Whether to find the agent with maximum partnerships if there are none greater than num_partners","default":false},"exposure":{"type":"enum","default":"hiv","description":"For which exposure the agent zero should be converted","values":["hiv","knowledge"]}},"assort_mix":{"description":"Assortative mixing definitions, the key must be an attribute of the Agent class.","type":"definition","fields":{"attribute":{"description":"Which Agent attribute to assort on, can be nested (e.g. 'hiv.active' or 'race')","type":"none"},"partner_attribute":{"description":"To assort across attribute (e.g. agent on haart assorting with partner on prep). If not included, will default to the agent attribute [attribute].  Assorting across attribute is not supported in combination with same-assorting (where [agent_value] is '__any__').","type":"none","default":"__agent__"},"bond_types":{"description":"Which bond types this assort rule applies to.  If empty, the default, all bond types are included.","type":"array","class":"bond_types","default":[]},"agent_value":{"description":"Value of agent's attribute which triggers using this rule.  Can use the value '__any__' to then allow assoring on partner_values of '__same__' and '__other__'.","type":"none"},"partner_values":{"description":"Which partners to select if assortative mixing happens. Expects a sub-key of an attribute value with a value of the probability. `__other__` can be used as an attribute value as a fallthrough option.  If the `partner_attribute` is `location`, it is also possible to use the key `__neighbor__` here to indicate a probability of assorting with agents from neighboring locations (vs. `__same__` or `__other__`).  All of the probabilities should add to one.","type":"none"}},"default":{"assort_null":{"attribute":"race","agent_value":"None","partner_values":{"None":1}}}},"calibration":{"injection":{"act":{"default":1,"description":"Scales number of injection acts during syringe-based transmission","type":"float","min":0}},"sex":{"act":{"default":1,"description":"Scales number of sex acts during sex transmission","type":"float","min":0},"partner":{"default":1,"description":"Scales probability of partner acquisition","type":"float","min":0}},"acquisition":{"default":1,"description":"Scales probability of acquisition","type":"float","min":0},"test_frequency":{"default":1,"description":"Scaling factor for testing frequency","type":"float","min":0},"mortality":{"default":1,"description":"Scaling factor for all cause mortality rates","type":"float","min":0},"incarceration":{"default":1,"description":"Scaling factor for probability of becoming incarcerated","type":"float","min":0},"partnership":{"buffer":{"default":1,"description":"Scaling factor for number of partners able to take on when other agents are looking to partner","type":"float","min":1},"break_point":{"default":3,"type":"int","description":"How many failed attempts an agent can have at partnering in a given round before removing them from the eligible pool","min":0}},"haart":{"transmission":{"default":1,"description":"Scaling factor for effictiveness of ART therapy on transmission probability","type":"float","min":0},"coverage":{"default":1,"description":"Scaling factor for enrollment on ART probability","type":"float","min":0}},"network":{"trim":{"prob":{"default":0.1,"description":"Probability an agent's relationships will be trimmed if using comp_size for network initialization","type":"float","min":0,"max":1}}}},"classes":{"races":{"type":"definition","description":"Races included in model","fields":{"hispanic":{"type":"boolean"}},"default":{"white":{"hispanic":false},"black":{"hispanic":false}}},"sex_types":{"description":"Which sex types to use in model","type":"definition","fields":{"gender":{"type":"enum","values":["M","F","O"]},"cis_trans":{"type":"enum","values":["cis","trans"]},"sleeps_with":{"type":"keys"}},"default":{"HM":{"gender":"M","cis_trans":"cis","sleeps_with":["HF","MTF"]},"HF":{"gender":"F","cis_trans":"cis","sleeps_with":["HM"]},"MSM":{"gender":"M","cis_trans":"cis","sleeps_with":["MSM","MTF"]},"WSW":{"gender":"F","cis_trans":"cis","sleeps_with":["WSW","MTF"]},"MTF":{"gender":"F","cis_trans":"trans","sleeps_with":["WSW","HM","MSM"]}}},"bond_types":{"type":"definition","description":"Types of bonds relationships can have","fields":{"acts_allowed":{"type":"array","values":["sex","injection","pca"]}},"default":{"Inj":{"acts_allowed":["injection"]},"SexInj":{"acts_allowed":["injection","sex"]},"Sex":{"acts_allowed":["sex"]},"Social":{"acts_allowed":["pca"]}}},"drug_types":{"default":["Inj","NonInj","None"],"description":"Types of drugs that an agent can use in the model","type":"array","values":["Inj","NonInj","None"]},"distributions":{"default":["poisson","gamma","uniform","beta","pert","set_value","randint","weibull_modified","wald","negative_binomial"],"description":"Which distributions are available in the model - more of a reference than a class","type":"array","values":["poisson","gamma","uniform","beta","pert","set_value","randint","wald","weibull_modified","negative_binomial"]},"locations":{"type":"definition","description":"Locations that exist within the model","fields":{"ppl":{"type":"float","min":0,"max":1},"category":{"type":"any","default":"","description":"An arbitrary category that can be used to group locations for migration."}},"default":{"world":{"ppl":1}}}},"demographics":{"type":"sub-dict","description":"Parameters controlling population race level probabilities and behaviors","keys":["races"],"default":{"ppl":{"default":0,"description":"Percentage of agent population with given race.  Across races this must add up to one.","type":"float","min":0,"max":1},"hiv":{"transmission":{"default":1,"description":"Scaling factor for transmission probability","type":"float","min":0}},"age":{"type":"bin","description":"Binned probabilities of ages by race, last bin should be 1 to have default","fields":{"prob":{"type":"float","min":0,"max":1},"min":{"type":"int","min":0},"max":{"type":"int","min":0}},"default":{"1":{"prob":0.085,"min":15,"max":24},"2":{"prob":0.291,"min":25,"max":34},"3":{"prob":0.511,"min":35,"max":44},"4":{"prob":0.96,"min":45,"max":54},"5":{"prob":1,"min":55,"max":80}}},"sex_type":{"type":"sub-dict","description":"Parameters controlling population race+sex_type level probabilities and behaviors","keys":["sex_types"],"default":{"ppl":{"default":0,"description":"Percentage of agent population of this race with given sex_type. Across sex_types for this race this must add up to one.","type":"float","min":0,"max":1},"sex_role":{"init":{"versatile":{"default":1,"description":"Percentage of agents in this class with 'versatile' sex role","type":"float","min":0,"max":1},"insertive":{"default":0,"description":"Percentage of agents in this class with 'insertive' sex role","type":"float","min":0,"max":1},"receptive":{"default":0,"description":"Percentage of agents in this class with 'receptive' sex role","type":"float","min":0,"max":1}}},"incar":{"init":{"default":0,"description":"Probability that an agent in this class is initially incarcerated","type":"float","min":0,"max":1},"prob":{"default":0,"description":"Probability that an agent in this class becomes incarcerated at a given time step","type":"float","min":0,"max":1},"duration":{"prob":{"type":"bin","description":"Binned probabilities of incarceration duration during model run","fields":{"prob":{"type":"float","min":0,"max":1},"min":{"type":"int","min":0},"max":{"type":"int","min":0}},"default":{"1":{"prob":0.4,"min":1,"max":2},"2":{"prob":0.475,"min":1,"max":13},"3":{"prob":0.065,"min":13,"max":26},"4":{"prob":0.045,"min":26,"max":78},"5":{"prob":0.01,"min":78,"max":130},"6":{"prob":0.01,"min":130,"max":260}}},"init":{"type":"bin","description":"Binned probabilities of incarceration duration when initializing population","fields":{"prob":{"type":"float","min":0,"max":1},"min":{"type":"int","min":0},"max":{"type":"int","min":0}},"default":{"1":{"prob":0.14,"min":1,"max":13},"2":{"prob":0.09,"min":13,"max":26},"3":{"prob":0.2,"min":26,"max":78},"4":{"prob":0.11,"min":78,"max":130},"5":{"prob":0.16,"min":130,"max":260},"6":{"prob":0.3,"min":260,"max":520}}}}},"injection":{"num_acts":{"default":0,"description":"Mean number of injection acts done within a relationship","type":"float","min":0},"unsafe_prob":{"default":0,"description":"Probability of sharing a syringe per act","type":"float","min":0,"max":1}},"safe_sex":{"type":"sub-dict","description":"Parameters controlling condom use/safe sex per sex act given bond type","keys":["bond_types"],"default":{"prob":{"default":0,"type":"float","min":0,"max":1}}},"prep":{"discontinue":{"default":0,"description":"Probability that an agent on PrEP discontinues PrEP at a given time step","type":"float","min":0,"max":1},"adherence":{"default":0,"description":"Probability that an agent on PrEP is assigned an adherence of 1, otherwise assigned 0","type":"float","min":0,"max":1},"cap":{"default":0,"description":"Ceiling/target percentage of PrEP coverage for this population class, or probability of going on PrEP if cap_as_prob is true","type":"float","min":0,"max":1},"init":{"default":0,"description":"Initial PrEP coverage","type":"float","min":0,"max":1}},"high_risk":{"init":{"default":0,"description":"Probability that an agent is initially marked as high risk","type":"float","min":0,"max":1}},"vaccine":{"init":{"default":0,"description":"Probability that an agent is initially vaccinated","type":"float","min":0,"max":1},"prob":{"default":0,"description":"Probability that an agent becomes vaccinated at a given time step","type":"float","min":0,"max":1},"booster":{"interval":{"default":0,"description":"Number of time steps from vaccination at which booster vaccine is required","type":"int","min":0},"prob":{"default":0,"description":"Probability of an agent getting booster vaccine at required time step","type":"float","min":0,"max":1}}},"drug_type":{"type":"sub-dict","description":"Parameters controlling population race+sex_type+drug_type level probabilities and behaviors","keys":["drug_types"],"default":{"ppl":{"default":0,"description":"Percentage of agents with the given drug use type, all drug_types must add to 1","type":"float","min":0,"max":1},"hiv":{"init":{"default":0,"description":"Probability that an agent in this class initially has HIV","type":"float","min":0,"max":1},"dx":{"init":{"default":0,"description":"Probability that an agent with HIV in the initial population is initially diagnosed and 'knows' their HIV status, therefore enabling enrollment in treatment","type":"float","min":0,"max":1},"prob":{"default":0,"description":"Probability that an agent with HIV becomes diagnosed at a given time step and 'knows' their HIV status, therefore enabling enrollment in treatment","type":"float","min":0,"max":1}},"aids":{"init":{"default":0,"description":"Probability that an agent in this class with HIV has AIDS initially","type":"float","min":0,"max":1}}},"haart":{"init":{"default":0,"description":"Probability that an agent in this class with HIV is initially enrolled in HAART","type":"float","min":0,"max":1},"cap":{"type":"float","default":0,"description":"Percent of diagnosed agents on haart if haart cap is used","min":0,"max":1},"enroll":{"type":"definition","description":"Probability that an agent in this class with HIV becomes enrolled in HAART given the agent's time since diagnosis (unused if use_cap is true)","fields":{"prob":{"type":"float","min":0,"max":1},"start":{"type":"int","min":0},"stop":{"type":"int","min":1}},"default":{"enroll_0":{"start":0,"stop":999,"prob":0}}},"reinit":{"prob":{"type":"float","description":"Probability of reinitiating haart","default":0}},"adherence":{"init":{"default":0,"description":"Probability that an agent is adherent at agent creation","type":"float","min":0,"max":1},"prob":{"default":0,"description":"Probability that an agent is adherent when going on haart","type":"float","min":0,"max":1},"discontinue":{"default":0,"description":"Probability that an adherent agent will become nonadherent at a given timestep","type":"float","min":0,"max":1},"become":{"default":0,"description":"Probability that a non-adherent agent will become adherent at a given timestep","type":"float","min":0,"max":1}},"discontinue":{"default":0,"description":"Probability that an agent on HAART discontinues HAART in a given time step","type":"float","min":0,"max":1}},"death_rate":{"base":{"default":10.4,"type":"float","description":"Death rate by race per 1000 person years in base case"},"hiv":{"default":2,"type":"float","description":"Scalar for death rate for agents with hiv, not aids, and not haart adherent. Scales from base."},"aids":{"default":4,"type":"float","description":"Scalar for death rate for agents with aids. Scales from base."},"haart_adherent":{"default":1,"type":"float","description":"Scalar for death rate for those fully adherent on haart. Scales from base."}},"num_partners":{"type":"sub-dict","keys":["bond_types"],"default":{"dist_type":{"default":"set_value","description":"How to determine mean number of partners for an agent. Uses numpy.random distributions or 'set_value' to always return the first value. More info at https://numpy.org/doc/stable/reference/random/generator.html#numpy.random.Generator","type":"enum","class":"distributions"},"vars":{"type":"bin","description":"Pass values in order of bin keys to the distribution, starting at 1","fields":{"value":{"type":"float"},"value_type":{"type":"enum","values":["int","float"]}},"default":{"1":{"value":0,"value_type":"int"}}}}}}}}}}},"exposures":{"hiv":{"default":true,"description":"Whether hiv will be used as an exposure in the model","type":"boolean"},"knowledge":{"default":false,"description":"Whether knowledge will be used as an exposure in the model","type":"boolean"}},"external_exposure":{"exposure":{"description":"Which exposure does the agent have external exposure to","type":"enum","default":"hiv","values":["hiv","knowledge"]},"sex_type":{"description":"Which sex_type does this external exposure affect","type":"enum","default":"HM","class":"sex_types"},"convert_prob":{"default":0.01,"description":"Probability of an external exposure agent additionally converting to that exposure","type":"float","min":0,"max":1},"init":{"default":0.06,"description":"Probability an agent is initialized as having external exposure","type":"float","min":0,"max":1}},"features":{"incar":{"default":false,"description":"Whether incarceration will be used in the model","type":"boolean"},"prep":{"default":false,"description":"Whether PrEP will be used in the model","type":"boolean"},"random_trial":{"default":false,"description":"Whether to run a random trial for pca or prep (prep or pca and prep must be enabled)","type":"boolean"},"high_risk":{"default":false,"description":"Whether high risk will be used in the model","type":"boolean"},"haart":{"default":false,"description":"Whether haart will be used in the model","type":"boolean"},"die_and_replace":{"default":false,"description":"Whether agents can die in the model, if so they will be replaced","type":"boolean"},"static_network":{"default":false,"description":"Whether the network is static across time, i.e., no bonds formed or broken after initialization.","type":"boolean"},"agent_zero":{"default":false,"description":"Whether to create \"agent_zero\" to initialize HIV in a population","type":"boolean"},"assort_mix":{"default":false,"description":"Whether to use assortative mixing by classes other bond type compatibility when partnering","type":"boolean"},"vaccine":{"default":false,"description":"Whether to use a vaccine in the model","type":"boolean"},"partner_tracing":{"default":false,"description":"Whether to trace a newly diagnosed agent's partners, so that they become diagnosed at the next time step","type":"boolean"},"external_exposure":{"default":false,"description":"Whether to have agents that have some out of model exposure.","type":"boolean"},"syringe_services":{"default":false,"description":"Whether to have a syringe services program in the model","type":"boolean"},"timeline_scaling":{"default":false,"description":"Whether to scale various parameters based on time (such as a stay at home order affecting prep)","type":"boolean"}},"haart":{"use_cap":{"default":false,"description":"Whether \"cap\" defined in demographics.race.sex_type.haart.cap is used. Otherwise, haart probability is based on time since diagnosis (demographics.race.sex_type.haart.enroll).","type":"boolean"},"use_reinit":{"type":"boolean","default":false,"description":"Whether a separate probability should be used for haart initiation among agents who have previously discontinued haart"},"aids_scale":{"non_adherent":{"description":"Scalar for aids progression for agents on haart but non-adherent","default":0.00368,"type":"float","min":0,"max":1},"adherent":{"description":"Scalar for aids progression for agents adherent to haart","default":0.0008,"type":"float","min":0,"max":1}}},"high_risk":{"partner_scale":{"default":300,"description":"Linear increase to partner number during high risk period","type":"int","min":0},"prob":{"default":0.3,"description":"Probability an agent whose partner is incarcerated enters high risk group","type":"float","min":0,"max":1},"sex_based":{"type":"sub-dict","description":"Duration of high risk for each sex_type","keys":["sex_types"],"default":{"duration":{"default":6,"description":"Number of time steps an agent of this sex type is high risk","type":"int","min":0}}},"partnership_types":{"type":"array","description":"What type of partnerships to scale with high risk","class":"bond_types","default":["Sex"]}},"hiv":{"dx":{"risk_reduction":{"sex":{"default":0,"description":"risk redection in sex transmission probability for diagnosed agents","type":"float","min":0,"max":1},"injection":{"default":0,"description":"risk reduction in sex transmission probability for diagnosed agents","type":"float","min":0,"max":1}}},"acute":{"infectivity":{"default":4.3,"description":"Infectivity multiplier ratio for acute status infections","type":"float","min":0},"duration":{"default":2,"description":"Number of time steps an agent is in acute status","type":"int","min":0}},"aids":{"prob":{"default":0.004,"description":"Probability of an agent with hiv progressing to aids at a given time step (scaled by haart adherence)","type":"float","min":0,"max":1}},"max_init_time":{"default":42,"description":"On creation, agents are randomly assigned an hiv.time, this is the maximum time","type":"int","min":2},"start_time":{"default":-999,"description":"What timestep to allow agents to 1) init with HIV or 2) update/progress AIDS","type":"int"}},"incar":{"hiv":{"dx":{"default":0.69,"description":"Probability an agent with HIV who is incarcerated gets diagnosed while in prison","type":"float","min":0,"max":1},"multiplier":{"default":5,"description":"How many times more likely is an agent with HIV to become incarcerated","type":"float","min":0}},"haart":{"prob":{"default":0.51,"description":"Probability an agent who is incarcerated is enrolled in haart","type":"float","min":0,"max":1},"adherence":{"default":0.21,"description":"Probability an agent who is incarcerated is adherent","type":"float","min":0,"max":1},"discontinue":{"default":0.12,"description":"Probability an agent who is incarcerated discontinues haart","type":"float","min":0,"max":1}}},"knowledge":{"start_time":{"default":0,"description":"Time step at which knowledge begins","type":"int"},"init":{"default":0,"description":"Probability of agent awareness at time zero","type":"float","min":0,"max":1},"prob":{"default":0.01,"description":"Per-act probability of knowledge change (becoming aware) in unaware partner","type":"float","min":0,"max":1},"opinion":{"init":{"type":"bins","description":"Probability distribution for initial attitude/opinion level","fields":{"prob":{"type":"float","min":0,"max":1}},"default":{"0":{"prob":0.167},"1":{"prob":0.082},"2":{"prob":0.184},"3":{"prob":0.139},"4":{"prob":0.429}}},"prob":{"default":0.005,"description":"Per-act probability of opinion change in less-prominent partner","type":"float","min":0,"max":1},"threshold":{"default":3,"description":"Opinion needed to initiate PrEP on a 0-4 scale (translated from 1-5 scale)","type":"float","min":0,"max":4}},"feature":{"name":{"default":"prep","description":"The feature that agents are being exposed to knowledge of.","type":"enum","values":["prep"]},"prob":{"default":0.1275,"description":"The probability of attempting and initiating the feature when the opinion threshold is met.","type":"float","min":0,"max":1}}},"location":{"scaling":{"type":"sub-dict","description":"Parameters controlling location-specific scaling of other parameters","keys":["locations"],"default":{"type":"definition","description":"Definition of applying a scalar to a parameter.  The parameter should be the definition name with pipes instead of dots (e.g. `prep.cap` would be `prep|cap`). Some parameter categories can't be scaled, these include: model, classes, features, calibration, outputs, agent_zero, syringe_services, location.  Additionally, some fields within otherwise scalable categories cannot be changed by location if their use is not tied to a specific agent (e.g. prep.pca.choice, prep.random_trial). When a parameter is related to the interaction of an agent and a partner, the params of the location where the agent lives is typically used unless the parameter use clearly relates to the partner.","fields":{"field":{"type":"enum","default":"scalar","values":["scalar","override"],"description":"Which of the other fields in this definition to use for adjusting the param value"},"scalar":{"type":"float","description":"Scalar to apply to the param for this location","default":1,"min":0},"override":{"type":"any","description":"Override the generic param value with this value. Note, there will be no checking that this value is valid - be careful when overriding a value.","default":"not a value"}},"default":{"ls_default":{"scalar":1}}}},"migration":{"enabled":{"default":false,"type":"boolean","description":"Whether migration between locations is enabled.  Migration may cause the population numbers in a given location to drift over time."},"attribute":{"default":"name","type":"enum","description":"Which location attribute to determine migration probability based on.","values":["name","category"]},"probs_file":{"default":"","type":"any","description":"File path where the migration probability csv is located.  The CSV must have the attribute names along the first row and column with the topmost left cell blank.  Each value in the matrix represents the probability of an agent migrating from the location on that row to the location on that column at a given time step.  Each row must add to 1.  If there is a column with the header `prob` this will be used as the probability of an agent in the location described by the row migrating at all that timestep (useful if migrating based on a non-unique attribute).\n\nCSV using groups with a `prob` column:\n```\n,updown,rightleft,prob\nupdown,0.95,0.05,0.025\nrightleft,0.8,0.2,0.1\n```\n\nCSV using names without a `prob` column:\n```\n,north,south,east,west\nnorth,0.95,0.025,0.025,0\nsouth,0.1,0.8,0.1,0\neast,0.001,0.002,0.997,0\nwest,0.03,0.01,0.89,0.07\n```\n"}},"edges":{"type":"definition","description":"Definition of an neighbor relationship between two locations","fields":{"location_1":{"type":"enum","default":"world","class":"locations"},"location_2":{"type":"enum","default":"world","class":"locations"},"distance":{"type":"float","default":0,"min":0}},"default":{"edge_default":{"location_1":"world","location_2":"world","distance":0}}}},"model":{"seed":{"run":{"default":0,"description":"Seed for random number generator for running the model. 0 is pure random, -1 for stepwise through number of number of iterations (num_reps), other numbers will be used to explicitly set the seed.","type":"int"},"ppl":{"default":0,"description":"Seed for random number generator for creating the population. 0 is pure random, other numbers will be used to explicitly set the seed. -1 for stepwise through number of monte carlo iterations (-n flag on command line).","type":"int"}},"num_reps":{"default":1,"description":"Number of times to repeat simulation, if run seed is set to -1, it will step through run seeds during simulation","type":"int"},"num_pop":{"default":100,"description":"Size of population to model","type":"int","min":1},"time":{"num_steps":{"default":12,"description":"Number of time steps to run the model","type":"int","min":1},"steps_per_year":{"default":12,"description":"How many time steps are completed per year (e.g. 12 is equivalent to a monthly time step, and 52 would be weekly)","type":"int","min":1,"max":365},"burn_steps":{"default":6,"description":"Number of time steps of burn in period, if 0, there is no burn in period.","type":"int","min":0}},"network":{"enable":{"default":false,"type":"boolean","description":"Whether to use a formal graph to model the network, only needed if using network functionality such as centrality or bridging or to use an initialization algorithm from this section of parameters. scale_free does not require a formal graph and is the default if graph is not enabled"},"type":{"default":"scale_free","description":"Algorithm used for network initialization","type":"enum","values":["scale_free","comp_size"]},"component_size":{"max":{"default":100,"description":"Largest allowable size of a sub-graph in the network with comp_size","type":"int","min":2}}}},"outputs":{"print_frequency":{"default":10,"description":"How frequently to update the component states, visualization, network stats reports during  a run","type":"int"},"network":{"edge_list":{"default":false,"description":"Whether to write the graph's edge list during the run of a model","type":"boolean"},"calc_network_stats":{"default":false,"description":"Whether to write the network statistics during the run of a model","type":"boolean"},"calc_component_stats":{"default":false,"descriptions":"Whether to calculate and save statistics on network components during model run","type":"boolean"}},"reports":{"default":["basicReport"],"description":"Which reports to save from run of the model","type":"array","values":["basicReport"]},"classes":{"default":["races","sex_types","drug_types"],"description":"Which classes to aggregate data on for `reports`","type":"array","values":["races","sex_types","drug_types","locations","components"]},"logging":{"destination":{"default":"stdout","type":"enum","description":"Whether to log to a file or the console (default)","values":["stdout","file"]},"filepath":{"default":"__cwd__","description":"The directory path where the logs will be printed to if `destination` is `file`.  The logs will be named `titan_log_<date/time>.txt`.  The default is your current working directory.","type":"any"},"level":{"default":"INFO","type":"enum","description":"What is the minimum log level to record? See https://docs.python.org/3/howto/logging.html#when-to-use-logging for details on what the levels mean.","values":["DEBUG","INFO","WARNING","ERROR"]}}},"partner_tracing":{"exposure":{"description":"Which exposure is being partner traced","type":"enum","default":"hiv","values":["hiv"]},"prob":{"default":1,"description":"Probability that an agent whose partner is diagnosed with hiv will become traced","type":"float","min":0,"max":1},"dx_prob":{"default":0.947,"description":"Probability that an agent who is traced and has the exposure gets diagnosed with the exposure - default is  TP / (TP + FN)","type":"float","min":0,"max":1},"bond_type":{"description":"What type of partnerships are traced","type":"array","class":"bond_types","default":["Sex","Inj","SexInj"]},"start_time":{"description":"What time step to start partner tracing","type":"int","default":0},"stop_time":{"description":"What time step to stop partner tracing","type":"int","default":9999},"trace_duration":{"description":"For how many time steps after partner diagnosis a partner is traced","type":"int","default":1}},"partnership":{"sex":{"frequency":{"description":"Sex act frequency, keyed off of bond type.","type":"sub-dict","keys":["bond_types"],"default":{"type":{"type":"enum","description":"Whether to use distribution or bins for frequency","default":"bins","values":["bins","distribution"]},"bins":{"type":"bin","description":"Binned probabilities of frequencies","fields":{"prob":{"type":"float","min":0,"max":1},"min":{"type":"int","min":0},"max":{"type":"int","min":0}},"default":{"1":{"prob":1,"min":0,"max":1}}},"distribution":{"dist_type":{"type":"enum","description":"Type of distribution to use for partnerships if type is distribution. See https://numpy.org/doc/stable/reference/random/generator.html#numpy.random.Generator for function information","class":"distributions","default":"set_value"},"vars":{"type":"bin","description":"Pass values in order of bin keys to the distriubtion, starting at 1","fields":{"value":{"type":"float"},"value_type":{"type":"enum","values":["int","float"]}},"default":{"1":{"value":0,"value_type":"int"}}}}}},"haart_scaling":{"type":"sub-dict","description":"Scaling factor on HIV transmission depending on whether an agent is HAART adherent","keys":["sex_types"],"default":{"non_adherent":{"default":1,"min":0,"max":1,"description":"scalar for HIV transmission for agents on HAART but non-adherent","type":"float"},"adherent":{"default":0.03,"min":0,"max":1,"description":"Scalar for HIV transmission for agents on HAART and adherent","type":"float"}}},"acquisition":{"type":"sub-dict","description":"Probability of HIV negative partner acquiring HIV given their preferred sex position","keys":["sex_types"],"default":{"versatile":{"type":"float","description":"Probability for hiv acquisition for a given sex type for versatile role","min":0,"max":1,"default":0.00745},"insertive":{"type":"float","description":"Probability hiv acquisition for a given sex type for insertive role","min":0,"max":1,"default":0.0011},"receptive":{"type":"float","description":"Probability for hiv acquisition for a given sex type for receptive role","min":0,"max":1,"default":0.0138}}}},"injection":{"transmission":{"base":{"type":"float","description":"base rate for hiv transmission from injection acts","min":0,"max":1,"default":0.007},"haart_scaling":{"non_adherent":{"default":1,"min":0,"max":1,"description":"scalar for HIV transmission for agents on HAART but non-adherent","type":"float"},"adherent":{"default":0.03,"min":0,"max":1,"description":"scalar for HIV transmission for agents on HAART and adherent","type":"float"}}}},"pca":{"frequency":{"type":"sub-dict","description":"frequency of knowledge/opinion dissemination acts for peer change agent module","keys":["bond_types"],"default":{"type":{"type":"enum","description":"Whether to use distribution or bins for frequency","default":"bins","values":["bins","distributions"]},"bins":{"type":"bin","description":"Number of pca interactions by bond type, binned","fields":{"prob":{"type":"float","min":0,"max":1},"min":{"type":"float","min":0},"max":{"type":"float","min":0}},"default":{"1":{"prob":1,"min":0,"max":0}}},"distribution":{"dist_type":{"type":"enum","description":"Type of distribution to use for partnerships if type is distribution. See https://numpy.org/doc/stable/reference/random/generator.html#numpy.random.Generator for function information","class":"distributions","default":"set_value"},"vars":{"type":"bin","description":"Pass values in order of bin keys to the distriubtion, starting at 1","fields":{"value":{"type":"float"},"value_type":{"type":"enum","values":["int","float"]}},"default":{"1":{"value":0,"value_type":"int"}}}}}}},"ongoing_duration":{"default":1,"description":"Relationship duration past which the relationship is considered \"ongoing\".  Used for CDCWomen and CDCmsm prep eligibility.","type":"int","min":0},"duration":{"type":"sub-dict","keys":["bond_types","races"],"description":"Duration of relationships given agent race and partnership bond type","default":{"type":{"type":"enum","description":"Whether to use a distribution or bins for partnership durations","values":["bins","distribution"],"default":"bins"},"distribution":{"dist_type":{"type":"enum","description":"Type of distribution to use for partnership durations if type is distribution. See https://numpy.org/doc/stable/reference/random/generator.html#numpy.random.Generator for function information","class":"distributions","default":"gamma"},"vars":{"type":"bin","description":"Pass values in order of bin keys to the distriubtion, starting at 1","fields":{"value":{"type":"float"},"value_type":{"type":"enum","values":["int","float"]}},"default":{"1":{"value":0,"value_type":"int"}}},"mean":{"type":"float","description":"Mean of distribution, used to calculate partners per timestep from partners per year","min":0,"default":0}},"bins":{"type":"bin","description":"Binned probabilities of length of a partnership's sexual durations","fields":{"prob":{"type":"float","min":0,"max":1},"min":{"type":"int","min":0},"max":{"type":"int","min":0}},"default":{"1":{"prob":0.585,"min":1,"max":6},"2":{"prob":0.701,"min":7,"max":12},"3":{"prob":0.822,"min":13,"max":24},"4":{"prob":0.882,"min":25,"max":36},"5":{"prob":1,"min":37,"max":48}}}}},"network":{"same_component":{"prob":{"default":0,"type":"float","description":"Probability that for a given partnering attempt, the agent tries to partner with only other agents in their component. Otherwise, the agent tries to partner with agents from any component.  Network must be enabled.","min":0,"max":1}}}},"prep":{"type":{"default":["Oral"],"values":["Oral","Inj"],"description":"Type of PrEP used in model","type":"array"},"cap":{"default":0,"description":"Ceiling/target coverage for PrEP coverage, or probability of initiating prep at a timestep if cap_as_prob is true","type":"float","min":0,"max":1},"init":{"default":0,"description":"Probability of initiating PrEP at agent creation","type":"float","min":0,"max":1},"cap_as_prob":{"default":false,"description":"If prep.cap should be treated as a probability instead of a cap","type":"boolean"},"start_time":{"default":0,"description":"Timestep at which prep should start in the model","type":"int"},"efficacy":{"adherent":{"default":0.96,"description":"Probability of PrEP efficacy if agent is adherent","type":"float","min":0,"max":1},"non_adherent":{"default":0.76,"description":"Probabilty of PrEP efficacy if agent is non-adherent","type":"float","min":0,"max":1}},"target_model":{"default":["Allcomers"],"values":["Allcomers","cdc_women","cdc_msm","pwid","pwid_sex","Racial","ssp","ssp_sex"],"description":"which models to use to determine who is enrolled in PrEP","type":"array"},"half_life":{"default":40,"description":"Half life in days of injectable PrEP, used to calculate agent's prep load","type":"float","min":0},"peak_load":{"default":4.91,"description":"Maximum prep load that an agent can have (load at injection time step)","type":"float","min":0},"lai":{"prob":{"default":0,"description":"Probability of getting long acting injectable prep","type":"float","min":0,"max":1}}},"random_trial":{"prob":{"default":0.5,"description":"Probablility that a network component is assigned to the treatment arm of the trial","type":"float","min":0,"max":1},"start_time":{"default":0,"description":"time step at which the random trial is started","type":"int"},"treatment":{"default":"prep","description":"what type of treatment to apply to treated agents","type":"enum","values":["prep","knowledge"]},"choice":{"default":"bridge","description":"how the treatment agent within an enrolled component is selected (`all` treats all eligible agents in the component)","type":"enum","values":["all","bridge","eigenvector","random"]}},"syringe_services":{"timeline":{"type":"definition","fields":{"start_time":{"type":"int","description":"What time to start this prevalence of syringe services program"},"stop_time":{"type":"int","description":"What time to stop this prevalence of syringe services program"},"num_slots_start":{"type":"int","description":"Cap for number of available slots in SSP at beginning of time period","min":0},"num_slots_stop":{"type":"int","description":"Cap for number of available slots in SSP at end of time period. If different from num_slots_start, creates a linear scale-up or scale-down.","min":0},"risk":{"type":"float","description":"Risk of unsafe sharing for agents enrolled in the SSP","min":0,"max":1}},"default":{"ssp_default":{"start_time":1,"stop_time":2,"num_slots_start":0,"num_slots_stop":0,"risk":0.02}}}},"timeline_scaling":{"timeline":{"type":"definition","description":"Definition of when to start and stop applying a scalar to a parameter.","fields":{"parameter":{"type":"str","description":"The parameter to be scaled. Should be the parameter name with pipes instead of dots (e.g. `prep.discontinue` would be `prep|discontinue`)."},"start_time":{"type":"int","description":"What time to start the scaling of this parameter (inclusive)"},"stop_time":{"type":"int","description":"What time to stop the scaling of this parameter (exclusive)"},"scalar":{"type":"float","description":"Scalar to apply to the param during this time period, if 0 make sure the end time is past the end of the model otherwise things will break (can't divide by zero to get back to original value). Use a negative number to functionally scale a probability to zero, but retain the ability to recover to the original value.","default":1}},"default":{"ts_default":{"parameter":"ts_default","start_time":1,"stop_time":2,"scalar":1}}}},"vaccine":{"type":{"default":"RV144","description":"type of vaccine to use, affects transmission probability","type":"enum","values":["RV144","HVTN702"]},"booster":{"default":true,"description":"Whether to use booster vaccines","type":"boolean"},"start_time":{"default":1,"description":"Time step at which to start vaccination","type":"int","min":0},"on_init":{"default":false,"description":"Whether to initialize the population with vaccination","type":"boolean"}}}